AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Resources:
  routeHandler:
    Metadata:
      BuildMethod: go1.x
      BuildProperties:
        Env:
          CGO_ENABLED: 0
          GOARCH: amd64
          GOOS: linux
      SamResourceId: routeHandler
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: routeHandler
      Description: ''
      MemorySize: 128
      Timeout: 30
      Handler: bootstrap
      Runtime: provided.al2
      Architectures:
      - x86_64
      EphemeralStorage:
        Size: 512
      Environment:
        Variables:
          AMI_ID: ami-01df92b37906479cf
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
      - Statement:
        - Effect: Allow
          Action:
          - logs:CreateLogGroup
          Resource: arn:aws:logs:eu-north-1:058264393968:*
        - Effect: Allow
          Action:
          - logs:CreateLogStream
          - logs:PutLogEvents
          Resource:
          - arn:aws:logs:eu-north-1:058264393968:log-group:/aws/lambda/routeHandler:*
        - Action:
          - ec2:*
          Effect: Allow
          Resource: '*'
        - Effect: Allow
          Action:
          - elasticloadbalancing:*
          Resource: '*'
        - Effect: Allow
          Action:
          - cloudwatch:*
          Resource: '*'
        - Effect: Allow
          Action:
          - autoscaling:*
          Resource: '*'
        - Effect: Allow
          Action:
          - iam:CreateServiceLinkedRole
          Resource: '*'
          Condition:
            StringEquals:
              iam:AWSServiceName:
              - autoscaling.amazonaws.com
              - ec2scheduled.amazonaws.com
              - elasticloadbalancing.amazonaws.com
              - spot.amazonaws.com
              - spotfleet.amazonaws.com
              - transitgateway.amazonaws.com
        - Action:
          - dynamodb:*
          - dax:*
          - application-autoscaling:DeleteScalingPolicy
          - application-autoscaling:DeregisterScalableTarget
          - application-autoscaling:DescribeScalableTargets
          - application-autoscaling:DescribeScalingActivities
          - application-autoscaling:DescribeScalingPolicies
          - application-autoscaling:PutScalingPolicy
          - application-autoscaling:RegisterScalableTarget
          - cloudwatch:DeleteAlarms
          - cloudwatch:DescribeAlarmHistory
          - cloudwatch:DescribeAlarms
          - cloudwatch:DescribeAlarmsForMetric
          - cloudwatch:GetMetricStatistics
          - cloudwatch:ListMetrics
          - cloudwatch:PutMetricAlarm
          - cloudwatch:GetMetricData
          - datapipeline:ActivatePipeline
          - datapipeline:CreatePipeline
          - datapipeline:DeletePipeline
          - datapipeline:DescribeObjects
          - datapipeline:DescribePipelines
          - datapipeline:GetPipelineDefinition
          - datapipeline:ListPipelines
          - datapipeline:PutPipelineDefinition
          - datapipeline:QueryObjects
          - ec2:DescribeVpcs
          - ec2:DescribeSubnets
          - ec2:DescribeSecurityGroups
          - iam:GetRole
          - iam:ListRoles
          - kms:DescribeKey
          - kms:ListAliases
          - sns:CreateTopic
          - sns:DeleteTopic
          - sns:ListSubscriptions
          - sns:ListSubscriptionsByTopic
          - sns:ListTopics
          - sns:Subscribe
          - sns:Unsubscribe
          - sns:SetTopicAttributes
          - lambda:CreateFunction
          - lambda:ListFunctions
          - lambda:ListEventSourceMappings
          - lambda:CreateEventSourceMapping
          - lambda:DeleteEventSourceMapping
          - lambda:GetFunctionConfiguration
          - lambda:DeleteFunction
          - resource-groups:ListGroups
          - resource-groups:ListGroupResources
          - resource-groups:GetGroup
          - resource-groups:GetGroupQuery
          - resource-groups:DeleteGroup
          - resource-groups:CreateGroup
          - tag:GetResources
          - kinesis:ListStreams
          - kinesis:DescribeStream
          - kinesis:DescribeStreamSummary
          Effect: Allow
          Resource: '*'
        - Action:
          - cloudwatch:GetInsightRuleReport
          Effect: Allow
          Resource: arn:aws:cloudwatch:*:*:insight-rule/DynamoDBContributorInsights*
        - Action:
          - iam:PassRole
          Effect: Allow
          Resource: '*'
          Condition:
            StringLike:
              iam:PassedToService:
              - application-autoscaling.amazonaws.com
              - application-autoscaling.amazonaws.com.cn
              - dax.amazonaws.com
        - Effect: Allow
          Action:
          - iam:CreateServiceLinkedRole
          Resource: '*'
          Condition:
            StringEquals:
              iam:AWSServiceName:
              - replication.dynamodb.amazonaws.com
              - dax.amazonaws.com
              - dynamodb.application-autoscaling.amazonaws.com
              - contributorinsights.dynamodb.amazonaws.com
              - kinesisreplication.dynamodb.amazonaws.com
      RecursiveLoop: Terminate
      SnapStart:
        ApplyOn: None
      Events:
        routeHandlerTriggerGET:
          Type: Api
          Properties:
            Path: /
            Method: GET
            RestApiId:
              Ref: routeHandlerTrigger
  routeHandlerTrigger:
    Type: AWS::Serverless::Api
    Properties:
      Name:
        Fn::Sub:
        - ${ResourceName} From Stack ${AWS::StackName}
        - ResourceName: routeHandlerTrigger
      StageName: Prod
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${routeHandler.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      Cors:
        MaxAge: 5
